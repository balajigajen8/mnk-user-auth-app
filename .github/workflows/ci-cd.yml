name: CI/CD Pipeline for Laravel with ECR and EKS

on:
  push:
    branches:
      - main

jobs:
  provision-infrastructure:
    name: Provision Infrastructure
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1  # Region is specified here

    # Step 3: Deploy CloudFormation Stacks (optional steps)
    - name: Deploy EKS Stack
      run: |
        aws cloudformation deploy \
          --template-file infra/eks.yaml \
          --stack-name LaravelEKS \
          --capabilities CAPABILITY_NAMED_IAM

    - name: Deploy DynamoDB Stack
      run: |
        aws cloudformation deploy \
          --template-file infra/dynamodb.yaml \
          --stack-name LaravelDynamoDB

    - name: Deploy ECR Stack
      run: |
        aws cloudformation deploy \
          --template-file infra/ecr.yaml \
          --stack-name LaravelECR

  build-and-deploy-application:
    name: Build and Deploy Application
    needs: provision-infrastructure
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Build Docker Image
    - name: Build Docker Image
      run: |
        docker build -f docker/Dockerfile -t laravel-app .
        docker tag laravel-app:latest 650251721226.dkr.ecr.ap-south-1.amazonaws.com/laravel-app:latest

    # Step 3: Log in to Amazon ECR (No need for the region here)
    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: false
        registry-type: private
        skip-logout: false

    # Step 4: Push Docker Image to ECR
    - name: Push Docker Image to ECR
      run: |
        docker push 650251721226.dkr.ecr.ap-south-1.amazonaws.com/laravel-app:latest

    # Step 5: Update kube config for EKS
    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ap-south-1

    # Step 6: Deploy Docker Image to EKS
    - name: Deploy to EKS
      run: |
        # Replace the image in your Kubernetes manifests (deployment.yaml)
        sed -i.bak "s|DOCKER_IMAGE|650251721226.dkr.ecr.ap-south-1.amazonaws.com/laravel-app:latest|g" manifests/deployment.yaml

        # Apply the Kubernetes manifests to EKS
        kubectl apply -f manifests/deployment.yaml
        kubectl apply -f manifests/service.yaml

    # Optional: Output the EKS service URL
    - name: Output EKS Service URL
      run: |
        echo "EKS service URL: http://$(kubectl get svc -o=jsonpath='{.items[0].status.loadBalancer.ingress[0].hostname}' -n default)"
